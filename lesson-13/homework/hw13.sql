1)SELECT emp_id || '-' || first_name || ' ' || last_name AS employee_info FROM employees WHERE emp_id = 100;
UPDATE employees SET phone_number = REPLACE(phone_number, '124', '999');
2)SELECT  first_name AS "First Name",  LENGTH(first_name) AS "Name Length" FROM employees WHERE first_name LIKE 'A%' OR first_name LIKE 'J%' OR first_name LIKE 'M%' ORDER BY first_name;
3)SELECT manager_id, SUM(salary) AS total_salary FROM employees GROUP BY manager_id;
4)SELECT year, CASE WHEN Max1 >= Max2 AND Max1 >= Max3 THEN Max1 WHEN Max2 >= Max1 AND Max2 >= Max3 THEN Max2 ELSE Max3 END AS highest_value FROM TestMax;
5)SELECT * FROM cinema WHERE MOD(id, 2) = 1 AND description <> 'boring';
6)SELECT * FROM SingleOrder ORDER BY (Id = 0), Id;
7)SELECT COALESCE(column1, column2, column3, column4) AS first_non_null FROM person;
8)SELECT SUBSTRING_INDEX(FullName, ' ', 1) AS Firstname, SUBSTRING_INDEX(SUBSTRING_INDEX(FullName, ' ', 2), ' ', -1) AS Middlename, SUBSTRING_INDEX(FullName, ' ', -1) AS Lastname FROM Students;
9)SELECT * FROM Orders WHERE customer_id IN (SELECT customer_id FROM Orders WHERE state = 'California') AND state = 'Texas';
10)SELECT category_id, GROUP_CONCAT(item_name ORDER BY item_name) AS items FROM DMLTable GROUP BY category_id;
11)SELECT * FROM Employees WHERE LENGTH(LOWER(first_name || last_name)) - LENGTH(REPLACE(LOWER(first_name || last_name), 'a', '')) >= 3;
12)SELECT department_id, COUNT(*) AS total_employees, SUM(CASE WHEN hire_date <= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) THEN 1 ELSE 0 END) AS employees_over_3_years, ROUND(100.0 * SUM(CASE WHEN hire_date <= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) THEN 1 ELSE 0 END) / COUNT(*), 2) AS percent_over_3_years FROM employees GROUP BY department_id;
13)SELECT job_description, MIN_BY(spaceman_id, experience_years) AS least_experienced, MAX_BY(spaceman_id, experience_years) AS most_experienced FROM Personal GROUP BY job_description;
14)SELECT REGEXP_REPLACE('tf56sd#%OqH', '[^A-Z]', '') AS UppercaseLetters, REGEXP_REPLACE('tf56sd#%OqH', '[^a-z]', '') AS LowercaseLetters, REGEXP_REPLACE('tf56sd#%OqH', '[^0-9]', '') AS Digits, REGEXP_REPLACE('tf56sd#%OqH', '[A-Za-z0-9]', '') AS SpecialChars;
15)SELECT id, value, SUM(value) OVER (ORDER BY id) AS cumulative_sum FROM Students;
16)SELECT expression, eval(expression) AS result FROM Equations;
17)SELECT s1.* FROM Student s1 JOIN (SELECT birthdate FROM Student GROUP BY birthdate HAVING COUNT(*) > 1) s2 ON s1.birthdate = s2.birthdate;
18)SELECT LEAST(PlayerA, PlayerB) AS Player1, GREATEST(PlayerA, PlayerB) AS Player2, SUM(Score) AS TotalScore FROM PlayerScores GROUP BY LEAST(PlayerA, PlayerB), GREATEST(PlayerA, PlayerB);
